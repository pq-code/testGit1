#!/bin/sh
. "$(dirname "$0")/_/husky.sh"


# 获取当前分支
current_branch=$(git rev-parse --abbrev-ref HEAD)

# 获取目标分支
if git rev-parse --verify MERGE_HEAD &> /dev/null; then
  source_branch=$(git rev-parse --abbrev-ref $(git merge-base HEAD MERGE_HEAD))
else
  source_branch="N/A"
fi

echo -e "\033[33m -------------------  当前分支: $current_branch 正在对提交的代码执行commit操作 -------------------- \033[0m"
echo -e "\033[33m -------------------  来源分支: $source_branch 正在对提交的代码执行commit操作 -------------------- \033[0m"

# 如果是尝试将 test 分支合并到其他分支，则阻止该操作
if [ "$current_branch" != "test" ] && [ "$source_branch" = "test" ]; then
  echo "test 分支禁止合并到 $source_branch."
  exit 1
fi

# 检查是否有待提交的文件
if [ -z "$(git diff --cached --name-only)" ]; then
  echo "暂存区域没有文件"
  exit 1
fi

npx --no-install lint-staged

# 添加格式化后的文件到暂存区
git add $(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(js|jsx|ts|tsx|json|css|scss|md)$')


# 运行 Jest 单元测试
echo "Running Jest tests..."
npx jest --passWithNoTests
if [ $? -ne 0 ]; then
  echo "一些测试失败了。请在提交之前修复它们。"
  exit 1
fi

echo -e "\033[33m -------------------  代码校验通过准备提交 ✅ -------------------- \033[0m"
exit 0

