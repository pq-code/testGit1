#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# 获取当前分支
currBranch=$(git rev-parse --abbrev-ref HEAD)

# 获取当前分支已经合并的分支列表
mergedList=$(git branch --merged $currBranch)

# 打印当前分支信息
echo -e "\033[0;32m -------------------  当前分支: \033[33m $currBranch \033[0;32m 正在对提交的代码执行  \033[33m push \033[0;32m 操作 --------------------"

# 检查 mergedList 是否为空
if [ -z "$mergedList" ]; then
    echo "\033[0;33m 当前分支没有任何合并记录。"
    exit 0
fi

# 确保换行符是 Unix 格式的
mergedList=$(echo "$mergedList" | tr '\r' '\n')

# 使用 while 循环读取每一行
array=()
while IFS= read -r line; do
    array+=("$line")
done <<< "$mergedList"

# 定义要搜索的分支名称
search="test"
found=false

# 遍历合并列表，检查是否存在 test 分支
for item in "${array[@]}"; do
    item_without_spaces=${item//[[:space:]]/}
    if [ "$item_without_spaces" == "$search" ]; then
        found=true
        break
    fi
done

# 如果找到 test 分支，阻止合并操作
if $found; then
    echo  "\033[33m 当前分支 \033[0;32m  $currBranch  包含了 \033[0;31m $search 分支合并记录"
    echo "\033[0;31m test禁止合并到其他分支"
    exit 1
fi

# 如果未找到 test 分支，允许合并操作
exit 0
